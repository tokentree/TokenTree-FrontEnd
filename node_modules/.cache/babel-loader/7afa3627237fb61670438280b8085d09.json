{"ast":null,"code":"import{useEffect}from'react';import useGetPriceData from'./useGetPriceData';import{CAKE}from'../constants';var useGetDocumentTitlePrice=function useGetDocumentTitlePrice(){var priceData=useGetPriceData();var cakePriceUsd=0;try{var _priceData$data$CAKE$;cakePriceUsd=priceData?parseFloat((_priceData$data$CAKE$=priceData.data[CAKE.address].price)!==null&&_priceData$data$CAKE$!==void 0?_priceData$data$CAKE$:0):0;}catch(e){// Ignore\n}var cakePriceUsdString=Number.isNaN(cakePriceUsd)||cakePriceUsd===0?'':\" - $\".concat(cakePriceUsd.toLocaleString(undefined,{minimumFractionDigits:3,maximumFractionDigits:3}));useEffect(function(){document.title=\"PancakeSwap\".concat(cakePriceUsdString);},[cakePriceUsdString]);};export default useGetDocumentTitlePrice;","map":{"version":3,"sources":["/Users/bulut/Documents/Collections/EVM/Pancake/pancake-swap-testnet/pancake-swap-interface-v1/src/hooks/useGetDocumentTitlePrice.ts"],"names":["useEffect","useGetPriceData","CAKE","useGetDocumentTitlePrice","priceData","cakePriceUsd","parseFloat","data","address","price","e","cakePriceUsdString","Number","isNaN","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,IAAT,KAAqB,cAArB,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACrC,GAAMC,CAAAA,SAAS,CAAGH,eAAe,EAAjC,CACA,GAAII,CAAAA,YAAY,CAAG,CAAnB,CACA,GAAI,2BACFA,YAAY,CAAGD,SAAS,CAAGE,UAAU,wBAACF,SAAS,CAACG,IAAV,CAAeL,IAAI,CAACM,OAApB,EAA6BC,KAA9B,+DAAuC,CAAvC,CAAb,CAAyD,CAAjF,CACD,CAAC,MAAOC,CAAP,CAAU,CACV;AACD,CAED,GAAMC,CAAAA,kBAAkB,CACtBC,MAAM,CAACC,KAAP,CAAaR,YAAb,GAA8BA,YAAY,GAAK,CAA/C,CACI,EADJ,eAEWA,YAAY,CAACS,cAAb,CAA4BC,SAA5B,CAAuC,CAC5CC,qBAAqB,CAAE,CADqB,CAE5CC,qBAAqB,CAAE,CAFqB,CAAvC,CAFX,CADF,CAQAjB,SAAS,CAAC,UAAM,CACdkB,QAAQ,CAACC,KAAT,sBAA+BR,kBAA/B,EACD,CAFQ,CAEN,CAACA,kBAAD,CAFM,CAAT,CAGD,CApBD,CAqBA,cAAeR,CAAAA,wBAAf","sourcesContent":["import { useEffect } from 'react'\nimport useGetPriceData from './useGetPriceData'\nimport { CAKE } from '../constants'\n\nconst useGetDocumentTitlePrice = () => {\n  const priceData = useGetPriceData();\n  let cakePriceUsd = 0;\n  try {\n    cakePriceUsd = priceData ? parseFloat(priceData.data[CAKE.address].price ?? 0) : 0\n  } catch (e) {\n    // Ignore\n  }\n\n  const cakePriceUsdString =\n    Number.isNaN(cakePriceUsd) || cakePriceUsd === 0\n      ? ''\n      : ` - $${cakePriceUsd.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })}`\n\n  useEffect(() => {\n    document.title = `PancakeSwap${cakePriceUsdString}`\n  }, [cakePriceUsdString])\n}\nexport default useGetDocumentTitlePrice\n"]},"metadata":{},"sourceType":"module"}