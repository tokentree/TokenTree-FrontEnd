{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport useGetPriceData from './useGetPriceData';\nimport { CAKE } from '../constants';\n\nconst useGetDocumentTitlePrice = () => {\n  _s();\n\n  const priceData = useGetPriceData();\n  let cakePriceUsd = 0;\n\n  try {\n    var _priceData$data$CAKE$, _priceData$data$CAKE$2;\n\n    cakePriceUsd = priceData ? parseFloat((_priceData$data$CAKE$ = (_priceData$data$CAKE$2 = priceData.data[CAKE.address]) === null || _priceData$data$CAKE$2 === void 0 ? void 0 : _priceData$data$CAKE$2.price) !== null && _priceData$data$CAKE$ !== void 0 ? _priceData$data$CAKE$ : 0) : 0;\n  } catch (e) {// Ignore\n  }\n\n  const cakePriceUsdString = Number.isNaN(cakePriceUsd) || cakePriceUsd === 0 ? '' : ` - $${cakePriceUsd.toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3\n  })}`;\n  useEffect(() => {\n    document.title = `PancakeSwap${cakePriceUsdString}`;\n  }, [cakePriceUsdString]);\n};\n\n_s(useGetDocumentTitlePrice, \"RKxTg47fbxWr8YqZdhpZxHrLMxs=\", false, function () {\n  return [useGetPriceData];\n});\n\nexport default useGetDocumentTitlePrice;","map":{"version":3,"sources":["/Users/bulut/Documents/Collections/EVM/Pancake/pancake-swap-testnet/pancake-swap-interface-v1/src/hooks/useGetDocumentTitlePrice.ts"],"names":["useEffect","useGetPriceData","CAKE","useGetDocumentTitlePrice","priceData","cakePriceUsd","parseFloat","data","address","price","e","cakePriceUsdString","Number","isNaN","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AACrC,QAAMC,SAAS,GAAGH,eAAe,EAAjC;AACA,MAAII,YAAY,GAAG,CAAnB;;AACA,MAAI;AAAA;;AACFA,IAAAA,YAAY,GAAGD,SAAS,GAAGE,UAAU,oDAACF,SAAS,CAACG,IAAV,CAAeL,IAAI,CAACM,OAApB,CAAD,2DAAC,uBAA8BC,KAA/B,yEAAwC,CAAxC,CAAb,GAA0D,CAAlF;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU,CACV;AACD;;AAED,QAAMC,kBAAkB,GACtBC,MAAM,CAACC,KAAP,CAAaR,YAAb,KAA8BA,YAAY,KAAK,CAA/C,GACI,EADJ,GAEK,OAAMA,YAAY,CAACS,cAAb,CAA4BC,SAA5B,EAAuC;AAC5CC,IAAAA,qBAAqB,EAAE,CADqB;AAE5CC,IAAAA,qBAAqB,EAAE;AAFqB,GAAvC,CAGJ,EANT;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACC,KAAT,GAAkB,cAAaR,kBAAmB,EAAlD;AACD,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAGD,CApBD;;GAAMR,wB;UACcF,e;;;AAoBpB,eAAeE,wBAAf","sourcesContent":["import { useEffect } from 'react'\nimport useGetPriceData from './useGetPriceData'\nimport { CAKE } from '../constants'\n\nconst useGetDocumentTitlePrice = () => {\n  const priceData = useGetPriceData();\n  let cakePriceUsd = 0;\n  try {\n    cakePriceUsd = priceData ? parseFloat(priceData.data[CAKE.address]?.price ?? 0) : 0\n  } catch (e) {\n    // Ignore\n  }\n\n  const cakePriceUsdString =\n    Number.isNaN(cakePriceUsd) || cakePriceUsd === 0\n      ? ''\n      : ` - $${cakePriceUsd.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })}`\n\n  useEffect(() => {\n    document.title = `PancakeSwap${cakePriceUsdString}`\n  }, [cakePriceUsdString])\n}\nexport default useGetDocumentTitlePrice\n"]},"metadata":{},"sourceType":"module"}