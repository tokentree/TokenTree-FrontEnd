{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"/Users/bugrahangulculer/front-end/pancake-swap-interface-v1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/bugrahangulculer/front-end/pancake-swap-interface-v1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/bugrahangulculer/front-end/pancake-swap-interface-v1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'@pancakeswap-libs/sdk';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import{CardBody,ArrowDownIcon,Button,IconButton,Text}from'@pancakeswap-libs/uikit';import{ThemeContext}from'styled-components';import AddressInputPanel from'components/AddressInputPanel';import Card,{GreyCard}from'components/Card';import{AutoColumn}from'components/Column';import ConfirmSwapModal from'components/swap/ConfirmSwapModal';import CurrencyInputPanel from'components/CurrencyInputPanel';import CardNav from'components/CardNav';import{AutoRow,RowBetween}from'components/Row';import AdvancedSwapDetailsDropdown from'components/swap/AdvancedSwapDetailsDropdown';import confirmPriceImpactWithoutFee from'components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,SwapCallbackError,Wrapper}from'components/swap/styleds';import TradePrice from'components/swap/TradePrice';import TokenWarningModal from'components/TokenWarningModal';import SyrupWarningModal from'components/SyrupWarningModal';import SafeMoonWarningModal from'components/SafeMoonWarningModal';import ProgressSteps from'components/ProgressSteps';import{INITIAL_ALLOWED_SLIPPAGE}from'constants/index';import{useActiveWeb3React}from'hooks';import{useCurrency}from'hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'hooks/useApproveCallback';import{useSwapCallback}from'hooks/useSwapCallback';import useWrapCallback,{WrapType}from'hooks/useWrapCallback';import{Field}from'state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'state/swap/hooks';import{useExpertModeManager,useUserDeadline,useUserSlippageTolerance}from'state/user/hooks';import{LinkStyledButton}from'components/Shared';import{maxAmountSpend}from'utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'utils/prices';import Loader from'components/Loader';import useI18n from'hooks/useI18n';import PageHeader from'components/PageHeader';import ConnectWalletButton from'components/ConnectWalletButton';import AppBody from'../AppBody';var Swap=function Swap(){var _ref3,_ref4,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;var loadedUrlParams=useDefaultsFromURLSearch();var TranslateString=useI18n();// token warning stuff\nvar _ref=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)],loadedInputCurrency=_ref[0],loadedOutputCurrency=_ref[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dismissTokenWarning=_useState2[0],setDismissTokenWarning=_useState2[1];var _useState3=useState({selectedToken:null,purchaseType:null}),_useState4=_slicedToArray(_useState3,2),transactionWarning=_useState4[0],setTransactionWarning=_useState4[1];var urlLoadedTokens=useMemo(function(){var _filter,_ref2;return(_filter=(_ref2=[loadedInputCurrency,loadedOutputCurrency])===null||_ref2===void 0?void 0:_ref2.filter(function(c){return c instanceof Token;}))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);var handleConfirmTokenWarning=useCallback(function(){setDismissTokenWarning(true);},[]);var handleConfirmWarning=function handleConfirmWarning(){setTransactionWarning({selectedToken:null,purchaseType:null});};var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var theme=useContext(ThemeContext);var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;var trade=showWrap?undefined:v2Trade;var parsedAmounts=showWrap?(_ref3={},_defineProperty(_ref3,Field.INPUT,parsedAmount),_defineProperty(_ref3,Field.OUTPUT,parsedAmount),_ref3):(_ref4={},_defineProperty(_ref4,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref4,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref4);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState5=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState6=_slicedToArray(_useState5,2),_useState6$=_useState6[0],showConfirm=_useState6$.showConfirm,tradeToConfirm=_useState6$.tradeToConfirm,swapErrorMessage=_useState6$.swapErrorMessage,attemptingTxn=_useState6$.attemptingTxn,txHash=_useState6$.txHash,setSwapState=_useState6[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),approvalSubmitted=_useState8[0],setApprovalSubmitted=_useState8[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,deadline,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:true,swapErrorMessage:undefined,txHash:undefined});});swapCallback().then(function(hash){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:false,swapErrorMessage:undefined,txHash:hash});});}).catch(function(error){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:false,swapErrorMessage:error.message,txHash:undefined});});});},[priceImpactWithoutFee,swapCallback,setSwapState]);// errors\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showInverted=_useState10[0],setShowInverted=_useState10[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var handleConfirmDismiss=useCallback(function(){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{showConfirm:false});});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[onUserInput,txHash,setSwapState]);var handleAcceptChanges=useCallback(function(){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{tradeToConfirm:trade});});},[trade]);// This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n// If so, they will be alerted with a warning message.\nvar checkForWarning=useCallback(function(selected,purchaseType){if(['SYRUP','SAFEMOON'].includes(selected)){setTransactionWarning({selectedToken:selected,purchaseType:purchaseType});}},[setTransactionWarning]);var handleInputSelect=useCallback(function(inputCurrency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);if(inputCurrency.symbol==='SYRUP'){checkForWarning(inputCurrency.symbol,'Selling');}if(inputCurrency.symbol==='SAFEMOON'){checkForWarning(inputCurrency.symbol,'Selling');}},[onCurrencySelection,setApprovalSubmitted,checkForWarning]);var handleMaxInput=useCallback(function(){if(maxAmountInput){onUserInput(Field.INPUT,maxAmountInput.toExact());}},[maxAmountInput,onUserInput]);var handleOutputSelect=useCallback(function(outputCurrency){onCurrencySelection(Field.OUTPUT,outputCurrency);if(outputCurrency.symbol==='SYRUP'){checkForWarning(outputCurrency.symbol,'Buying');}if(outputCurrency.symbol==='SAFEMOON'){checkForWarning(outputCurrency.symbol,'Buying');}},[onCurrencySelection,checkForWarning]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TokenWarningModal,{isOpen:urlLoadedTokens.length>0&&!dismissTokenWarning,tokens:urlLoadedTokens,onConfirm:handleConfirmTokenWarning}),/*#__PURE__*/_jsx(SyrupWarningModal,{isOpen:transactionWarning.selectedToken==='SYRUP',transactionType:transactionWarning.purchaseType,onConfirm:handleConfirmWarning}),/*#__PURE__*/_jsx(SafeMoonWarningModal,{isOpen:transactionWarning.selectedToken==='SAFEMOON',onConfirm:handleConfirmWarning}),/*#__PURE__*/_jsx(CardNav,{}),/*#__PURE__*/_jsx(AppBody,{children:/*#__PURE__*/_jsxs(Wrapper,{id:\"swap-page\",children:[/*#__PURE__*/_jsx(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/_jsx(PageHeader,{title:TranslateString(8,'Exchange'),description:TranslateString(1192,'Trade tokens in an instant')}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsx(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?TranslateString(194,'From (estimated)'):TranslateString(76,'From'),value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/_jsx(AutoColumn,{justify:\"space-between\",children:/*#__PURE__*/_jsxs(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:true,children:/*#__PURE__*/_jsx(IconButton,{variant:\"tertiary\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},style:{borderRadius:'50%'},scale:\"sm\",children:/*#__PURE__*/_jsx(ArrowDownIcon,{color:\"primary\",width:\"24px\"})})}),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/_jsx(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');},children:\"+ Add a send (optional)\"}):null]})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?TranslateString(196,'To (estimated)'):TranslateString(80,'To'),showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:false,children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",color:theme.colors.textSubtle})}),/*#__PURE__*/_jsx(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);},children:\"- Remove send\"})]}),/*#__PURE__*/_jsx(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})]}):null,showWrap?null:/*#__PURE__*/_jsx(Card,{padding:\".25rem .75rem 0 .75rem\",borderRadius:\"20px\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"4px\",children:[Boolean(trade)&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(1182,'Price')}),/*#__PURE__*/_jsx(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})]}),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(88,'Slippage Tolerance')}),/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",children:[allowedSlippage/100,\"%\"]})]})]})})]}),/*#__PURE__*/_jsxs(BottomGrouping,{children:[!account?/*#__PURE__*/_jsx(ConnectWalletButton,{width:\"100%\"}):showWrap?/*#__PURE__*/_jsx(Button,{disabled:Boolean(wrapInputError),onClick:onWrap,width:\"100%\",children:wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null}):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/_jsx(GreyCard,{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(Text,{mb:\"4px\",children:TranslateString(1194,'Insufficient liquidity for this trade.')})}):showApproveFlow?/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Button,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,style:{width:'48%'},variant:approval===ApprovalState.APPROVED?'success':'primary',children:approval===ApprovalState.PENDING?/*#__PURE__*/_jsxs(AutoRow,{gap:\"6px\",justify:\"center\",children:[\"Approving \",/*#__PURE__*/_jsx(Loader,{stroke:\"white\"})]}):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':\"Approve \".concat((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},style:{width:'48%'},id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,variant:isValid&&priceImpactSeverity>2?'danger':'primary',children:priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')})]}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,variant:isValid&&priceImpactSeverity>2&&!swapCallbackError?'danger':'primary',width:\"100%\",children:swapInputError||(priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))}),showApproveFlow&&/*#__PURE__*/_jsx(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]}),isExpertMode&&swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null]})]})]})}),/*#__PURE__*/_jsx(AdvancedSwapDetailsDropdown,{trade:trade})]});};export default Swap;","map":{"version":3,"sources":["/Users/bugrahangulculer/front-end/pancake-swap-interface-v1/src/pages/Swap/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","CardBody","ArrowDownIcon","Button","IconButton","Text","ThemeContext","AddressInputPanel","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","CardNav","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","SyrupWarningModal","SafeMoonWarningModal","ProgressSteps","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","Loader","useI18n","PageHeader","ConnectWalletButton","AppBody","Swap","loadedUrlParams","TranslateString","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","selectedToken","purchaseType","transactionWarning","setTransactionWarning","urlLoadedTokens","filter","c","handleConfirmTokenWarning","handleConfirmWarning","account","theme","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","handleSwap","prevState","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForWarning","selected","includes","handleInputSelect","inputCurrency","symbol","handleMaxInput","handleOutputSelect","outputCurrency","length","padding","borderRadius","colors","textSubtle","executionPrice","WRAP","UNWRAP","textAlign","width"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pancakeswap-libs/uikit'\nimport { ThemeContext } from 'styled-components'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AppBody from '../AppBody'\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const TranslateString = useI18n()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [transactionWarning, setTransactionWarning] = useState<{\n    selectedToken: string | null\n    purchaseType: string | null\n  }>({\n    selectedToken: null,\n    purchaseType: null,\n  })\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null,\n    })\n  }\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForWarning = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n        setTransactionWarning({\n          selectedToken: selected,\n          purchaseType,\n        })\n      }\n    },\n    [setTransactionWarning]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol === 'SYRUP') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n      if (inputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol === 'SYRUP') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n      if (outputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForWarning]\n  )\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={transactionWarning.selectedToken === 'SYRUP'}\n        transactionType={transactionWarning.purchaseType}\n        onConfirm={handleConfirmWarning}\n      />\n      <SafeMoonWarningModal isOpen={transactionWarning.selectedToken === 'SAFEMOON'} onConfirm={handleConfirmWarning} />\n      <CardNav />\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader\n            title={TranslateString(8, 'Exchange')}\n            description={TranslateString(1192, 'Trade tokens in an instant')}\n          />\n          <CardBody>\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? TranslateString(194, 'From (estimated)')\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      scale=\"sm\"\n                    >\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade\n                    ? TranslateString(196, 'To (estimated)')\n                    : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(1182, 'Price')}</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(88, 'Slippage Tolerance')}</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : showWrap ? (\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text mb=\"4px\">{TranslateString(1194, 'Insufficient liquidity for this trade.')}</Text>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  width=\"100%\"\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </Button>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n\nexport default Swap\n"]},"metadata":{},"sourceType":"module"}